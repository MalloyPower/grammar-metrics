The grammar: 
START SYMBOL: translation_unit
TERMINALS:
AUTO	DOUBLE	INT	STRUCT	BREAK	ELSE	LONG	SWITCH	CASE	ENUM	REGISTER	TYPEDEF	CHAR	EXTERN	RETURN	UNION	CONST	FLOAT	SHORT	UNSIGNED	CONTINUE	FOR	SIGNED	VOID	DEFAULT	GOTO	SIZEOF	VOLATILE	DO	IF	STATIC	WHILE	NEW	DELETE	THIS	OPERATOR	CLASS	PUBLIC	PROTECTED	PRIVATE	VIRTUAL	FRIEND	INLINE	OVERLOAD	IDENTIFIER	STRINGliteral	FLOATINGconstant	INTEGERconstant	CHARACTERconstant	OCTALconstant	HEXconstant	TYPEDEFname	ARROW	ICR	DECR	LS	RS	LE	GE	EQ	NE	ANDAND	OROR	ELLIPSIS	CLCL	DOTstar	ARROWstar	MULTassign	DIVassign	MODassign	PLUSassign	MINUSassign	LSassign	RSassign	ANDassign	ERassign	ORassign	'('	')'	'+'	'-'	'*'	'/'	'%'	'^'	'&'	'|'	'~'	'!'	'<'	'>'	'.'	'['	']'	','	'?'	':'	'='	';'	'{'	'}'	
NON-TERMINALS:
0: translation_unit	-> /* Empty */ | translation_unit external_definition
1: constant	-> INTEGERconstant | FLOATINGconstant | OCTALconstant | HEXconstant | CHARACTERconstant
2: string_literal_list	-> STRINGliteral | string_literal_list STRINGliteral
3: paren_identifier_declarator	-> scope_opt_identifier | scope_opt_complex_name | '(' paren_identifier_declarator ')'
4: scope_opt_identifier	-> IDENTIFIER | scope IDENTIFIER
5: scope_opt_complex_name	-> complex_name | scope complex_name
6: primary_expression	-> global_opt_scope_opt_identifier | global_opt_scope_opt_complex_name | THIS | constant | string_literal_list | '(' comma_expression ')'
7: global_opt_scope_opt_identifier	-> global_scope scope_opt_identifier | scope_opt_identifier
8: global_opt_scope_opt_complex_name	-> global_scope scope_opt_complex_name | scope_opt_complex_name
9: comma_expression	-> assignment_expression | comma_expression ',' assignment_expression
10: non_elaborating_type_specifier	-> sue_type_specifier | basic_type_specifier | typedef_type_specifier | basic_type_name | TYPEDEFname | global_or_scoped_typedefname
11: sue_type_specifier	-> elaborated_type_name | type_qualifier_list elaborated_type_name | sue_type_specifier type_qualifier
12: basic_type_specifier	-> type_qualifier_list basic_type_name | basic_type_name basic_type_name | basic_type_name type_qualifier | basic_type_specifier type_qualifier | basic_type_specifier basic_type_name
13: typedef_type_specifier	-> type_qualifier_list TYPEDEFname | type_qualifier_list global_or_scoped_typedefname | TYPEDEFname type_qualifier | global_or_scoped_typedefname type_qualifier | typedef_type_specifier type_qualifier
14: basic_type_name	-> INT | CHAR | SHORT | LONG | FLOAT | DOUBLE | SIGNED | UNSIGNED | VOID
15: global_or_scoped_typedefname	-> scoped_typedefname | global_scope scoped_typedefname | global_scope TYPEDEFname
16: operator_function_name	-> OPERATOR any_operator | OPERATOR type_qualifier_list operator_function_ptr_opt | OPERATOR non_elaborating_type_specifier operator_function_ptr_opt
17: any_operator	-> '+' | '-' | '*' | '/' | '%' | '^' | '&' | '|' | '~' | '!' | '<' | '>' | LS | RS | ANDAND | OROR | ARROW | ARROWstar | '.' | DOTstar | ICR | DECR | LE | GE | EQ | NE | assignment_operator | '(' ')' | '[' ']' | NEW | DELETE | ','
18: type_qualifier_list	-> type_qualifier | type_qualifier_list type_qualifier
19: operator_function_ptr_opt	-> /* Empty */ | unary_modifier operator_function_ptr_opt | asterisk_or_ampersand operator_function_ptr_opt
20: unary_modifier	-> scope '*' type_qualifier_list_opt | asterisk_or_ampersand type_qualifier_list
21: asterisk_or_ampersand	-> '*' | '&'
22: assignment_operator	-> '=' | MULTassign | DIVassign | MODassign | PLUSassign | MINUSassign | LSassign | RSassign | ANDassign | ERassign | ORassign
23: type_qualifier_list_opt	-> /* Empty */ | type_qualifier_list
24: postfix_expression	-> primary_expression | postfix_expression '[' comma_expression ']' | postfix_expression '(' ')' | postfix_expression '(' argument_expression_list ')' | postfix_expression {/* Empty */} '.' member_name | postfix_expression {/* Empty */} ARROW member_name | postfix_expression ICR | postfix_expression DECR | TYPEDEFname '(' ')' | global_or_scoped_typedefname '(' ')' | TYPEDEFname '(' argument_expression_list ')' | global_or_scoped_typedefname '(' argument_expression_list ')' | basic_type_name '(' assignment_expression ')'
25: argument_expression_list	-> assignment_expression | argument_expression_list ',' assignment_expression
26: member_name	-> scope_opt_identifier | scope_opt_complex_name | basic_type_name CLCL '~' basic_type_name | declaration_qualifier_list CLCL '~' declaration_qualifier_list | type_qualifier_list CLCL '~' type_qualifier_list
27: assignment_expression	-> conditional_expression | unary_expression assignment_operator assignment_expression
28: declaration_qualifier_list	-> storage_class | type_qualifier_list storage_class | declaration_qualifier_list declaration_qualifier
29: unary_expression	-> postfix_expression | ICR unary_expression | DECR unary_expression | asterisk_or_ampersand cast_expression | '-' cast_expression | '+' cast_expression | '~' cast_expression | '!' cast_expression | SIZEOF unary_expression | SIZEOF '(' type_name ')' | allocation_expression
30: cast_expression	-> unary_expression | '(' type_name ')' cast_expression
31: type_name	-> type_specifier | basic_type_name | TYPEDEFname | global_or_scoped_typedefname | type_qualifier_list | type_specifier abstract_declarator | basic_type_name abstract_declarator | TYPEDEFname abstract_declarator | global_or_scoped_typedefname abstract_declarator | type_qualifier_list abstract_declarator
32: allocation_expression	-> global_opt_scope_opt_operator_new '(' type_name ')' operator_new_initializer_opt | global_opt_scope_opt_operator_new '(' argument_expression_list ')' '(' type_name ')' operator_new_initializer_opt | global_opt_scope_opt_operator_new operator_new_type | global_opt_scope_opt_operator_new '(' argument_expression_list ')' operator_new_type
33: global_opt_scope_opt_operator_new	-> NEW | global_or_scope NEW
34: operator_new_initializer_opt	-> /* Empty */ | '(' ')' | '(' argument_expression_list ')'
35: operator_new_type	-> type_qualifier_list operator_new_declarator_opt operator_new_initializer_opt | non_elaborating_type_specifier operator_new_declarator_opt operator_new_initializer_opt
36: global_or_scope	-> global_scope | scope | global_scope scope
37: operator_new_declarator_opt	-> /* Empty */ | operator_new_array_declarator | asterisk_or_ampersand operator_new_declarator_opt | unary_modifier operator_new_declarator_opt
38: operator_new_array_declarator	-> '[' ']' | '[' comma_expression ']' | operator_new_array_declarator '[' comma_expression ']'
39: deallocation_expression	-> cast_expression | global_opt_scope_opt_delete deallocation_expression | global_opt_scope_opt_delete '[' comma_expression ']' deallocation_expression | global_opt_scope_opt_delete '[' ']' deallocation_expression
40: global_opt_scope_opt_delete	-> DELETE | global_or_scope DELETE
41: point_member_expression	-> deallocation_expression | point_member_expression DOTstar deallocation_expression | point_member_expression ARROWstar deallocation_expression
42: multiplicative_expression	-> point_member_expression | multiplicative_expression '*' point_member_expression | multiplicative_expression '/' point_member_expression | multiplicative_expression '%' point_member_expression
43: additive_expression	-> multiplicative_expression | additive_expression '+' multiplicative_expression | additive_expression '-' multiplicative_expression
44: shift_expression	-> additive_expression | shift_expression LS additive_expression | shift_expression RS additive_expression
45: relational_expression	-> shift_expression | relational_expression '<' shift_expression | relational_expression '>' shift_expression | relational_expression LE shift_expression | relational_expression GE shift_expression
46: equality_expression	-> relational_expression | equality_expression EQ relational_expression | equality_expression NE relational_expression
47: AND_expression	-> equality_expression | AND_expression '&' equality_expression
48: exclusive_OR_expression	-> AND_expression | exclusive_OR_expression '^' AND_expression
49: inclusive_OR_expression	-> exclusive_OR_expression | inclusive_OR_expression '|' exclusive_OR_expression
50: logical_AND_expression	-> inclusive_OR_expression | logical_AND_expression ANDAND inclusive_OR_expression
51: logical_OR_expression	-> logical_AND_expression | logical_OR_expression OROR logical_AND_expression
52: conditional_expression	-> logical_OR_expression | logical_OR_expression '?' comma_expression ':' conditional_expression
53: constant_expression	-> conditional_expression
54: comma_expression_opt	-> /* Empty */ | comma_expression
55: declaration	-> declaring_list ';' | default_declaring_list ';' | sue_declaration_specifier ';' {/* Empty */} | sue_type_specifier ';' | sue_type_specifier_elaboration ';'
56: declaring_list	-> declaration_specifier declarator {/* Empty */} initializer_opt | type_specifier declarator {/* Empty */} initializer_opt | basic_type_name declarator {/* Empty */} initializer_opt | TYPEDEFname declarator {/* Empty */} initializer_opt | global_or_scoped_typedefname declarator {/* Empty */} initializer_opt | declaring_list ',' declarator {/* Empty */} initializer_opt | declaration_specifier constructed_declarator | type_specifier constructed_declarator | basic_type_name constructed_declarator | TYPEDEFname constructed_declarator | global_or_scoped_typedefname constructed_declarator | declaring_list ',' constructed_declarator
57: default_declaring_list	-> declaration_qualifier_list identifier_declarator {/* Empty */} initializer_opt | type_qualifier_list identifier_declarator {/* Empty */} initializer_opt | default_declaring_list ',' identifier_declarator {/* Empty */} initializer_opt | declaration_qualifier_list constructed_identifier_declarator | type_qualifier_list constructed_identifier_declarator | default_declaring_list ',' constructed_identifier_declarator
58: sue_declaration_specifier	-> declaration_qualifier_list elaborated_type_name | declaration_qualifier_list elaborated_type_name_elaboration | sue_type_specifier storage_class | sue_type_specifier_elaboration storage_class | sue_declaration_specifier declaration_qualifier
59: sue_type_specifier_elaboration	-> elaborated_type_name_elaboration | type_qualifier_list elaborated_type_name_elaboration | sue_type_specifier_elaboration type_qualifier
60: identifier_declarator	-> unary_identifier_declarator | paren_identifier_declarator
61: initializer_opt	-> /* Empty */ | initializer
62: constructed_identifier_declarator	-> nonunary_constructed_identifier_declarator | asterisk_or_ampersand constructed_identifier_declarator | unary_modifier constructed_identifier_declarator
63: declaration_specifier	-> basic_declaration_specifier | sue_declaration_specifier | typedef_declaration_specifier
64: declarator	-> identifier_declarator | typedef_declarator
65: type_specifier	-> basic_type_specifier | sue_type_specifier | sue_type_specifier_elaboration | typedef_type_specifier
66: constructed_declarator	-> nonunary_constructed_identifier_declarator | constructed_paren_typedef_declarator | simple_paren_typedef_declarator '(' argument_expression_list ')' | simple_paren_typedef_declarator postfixing_abstract_declarator '(' argument_expression_list ')' | constructed_parameter_typedef_declarator | asterisk_or_ampersand constructed_declarator | unary_modifier constructed_declarator
67: nonunary_constructed_identifier_declarator	-> paren_identifier_declarator '(' argument_expression_list ')' | paren_identifier_declarator postfixing_abstract_declarator '(' argument_expression_list ')' | '(' unary_identifier_declarator ')' '(' argument_expression_list ')' | '(' unary_identifier_declarator ')' postfixing_abstract_declarator '(' argument_expression_list ')'
68: constructed_paren_typedef_declarator	-> '(' paren_typedef_declarator ')' '(' argument_expression_list ')' | '(' paren_typedef_declarator ')' postfixing_abstract_declarator '(' argument_expression_list ')' | '(' simple_paren_typedef_declarator postfixing_abstract_declarator ')' '(' argument_expression_list ')' | '(' TYPEDEFname postfixing_abstract_declarator ')' '(' argument_expression_list ')'
69: simple_paren_typedef_declarator	-> '(' TYPEDEFname ')' | '(' simple_paren_typedef_declarator ')'
70: postfixing_abstract_declarator	-> array_abstract_declarator | parameter_type_list
71: constructed_parameter_typedef_declarator	-> TYPEDEFname '(' argument_expression_list ')' | TYPEDEFname postfixing_abstract_declarator '(' argument_expression_list ')' | '(' clean_typedef_declarator ')' '(' argument_expression_list ')' | '(' clean_typedef_declarator ')' postfixing_abstract_declarator '(' argument_expression_list ')'
72: paren_typedef_declarator	-> postfix_paren_typedef_declarator | asterisk_or_ampersand '(' simple_paren_typedef_declarator ')' | unary_modifier '(' simple_paren_typedef_declarator ')' | asterisk_or_ampersand '(' TYPEDEFname ')' | unary_modifier '(' TYPEDEFname ')' | asterisk_or_ampersand paren_typedef_declarator | unary_modifier paren_typedef_declarator
73: clean_typedef_declarator	-> clean_postfix_typedef_declarator | asterisk_or_ampersand parameter_typedef_declarator | unary_modifier parameter_typedef_declarator
74: unary_identifier_declarator	-> postfix_identifier_declarator | asterisk_or_ampersand identifier_declarator | unary_modifier identifier_declarator
75: basic_declaration_specifier	-> declaration_qualifier_list basic_type_name | basic_type_specifier storage_class | basic_type_name storage_class | basic_declaration_specifier declaration_qualifier | basic_declaration_specifier basic_type_name
76: typedef_declaration_specifier	-> declaration_qualifier_list TYPEDEFname | declaration_qualifier_list global_or_scoped_typedefname | typedef_type_specifier storage_class | TYPEDEFname storage_class | global_or_scoped_typedefname storage_class | typedef_declaration_specifier declaration_qualifier
77: storage_class	-> EXTERN | TYPEDEF | STATIC | AUTO | REGISTER | FRIEND | OVERLOAD | INLINE | VIRTUAL
78: declaration_qualifier	-> storage_class | type_qualifier
79: type_qualifier	-> CONST | VOLATILE
80: elaborated_type_name	-> aggregate_name | enum_name
81: elaborated_type_name_elaboration	-> aggregate_name_elaboration | enum_name_elaboration
82: aggregate_name_elaboration	-> aggregate_name derivation_opt '{' member_declaration_list_opt '}' | aggregate_key derivation_opt '{' member_declaration_list_opt '}'
83: enum_name_elaboration	-> global_opt_scope_opt_enum_key '{' enumerator_list '}' | enum_name '{' enumerator_list '}'
84: aggregate_name	-> aggregate_key tag_name | global_scope scope aggregate_key tag_name | global_scope aggregate_key tag_name | scope aggregate_key tag_name
85: enum_name	-> global_opt_scope_opt_enum_key tag_name
86: derivation_opt	-> /* Empty */ | ':' derivation_list
87: member_declaration_list_opt	-> /* Empty */ | member_declaration_list_opt member_declaration
88: aggregate_key	-> STRUCT | UNION | CLASS
89: tag_name	-> IDENTIFIER | TYPEDEFname
90: global_scope	-> {/* Empty */} CLCL
91: scope	-> scoping_name CLCL | scope scoping_name CLCL
92: derivation_list	-> parent_class | derivation_list ',' parent_class
93: parent_class	-> global_opt_scope_opt_typedefname | VIRTUAL access_specifier_opt global_opt_scope_opt_typedefname | access_specifier virtual_opt global_opt_scope_opt_typedefname
94: global_opt_scope_opt_typedefname	-> TYPEDEFname | global_or_scoped_typedefname
95: access_specifier_opt	-> /* Empty */ | access_specifier
96: access_specifier	-> PUBLIC | PRIVATE | PROTECTED
97: virtual_opt	-> /* Empty */ | VIRTUAL
98: member_declaration	-> member_declaring_list ';' | member_default_declaring_list ';' | access_specifier ':' | new_function_definition | constructor_function_in_class | sue_type_specifier ';' | sue_type_specifier_elaboration ';' | identifier_declarator ';' | typedef_declaration_specifier ';' | sue_declaration_specifier ';'
99: member_declaring_list	-> type_specifier declarator member_pure_opt | basic_type_name declarator member_pure_opt | global_or_scoped_typedefname declarator member_pure_opt | member_conflict_declaring_item | member_declaring_list ',' declarator member_pure_opt | type_specifier bit_field_declarator | basic_type_name bit_field_declarator | TYPEDEFname bit_field_declarator | global_or_scoped_typedefname bit_field_declarator | declaration_specifier bit_field_declarator | member_declaring_list ',' bit_field_declarator
100: member_default_declaring_list	-> type_qualifier_list identifier_declarator member_pure_opt | declaration_qualifier_list identifier_declarator member_pure_opt | member_default_declaring_list ',' identifier_declarator member_pure_opt | type_qualifier_list bit_field_identifier_declarator | declaration_qualifier_list bit_field_identifier_declarator | member_default_declaring_list ',' bit_field_identifier_declarator
101: new_function_definition	-> identifier_declarator compound_statement | declaration_specifier declarator compound_statement | type_specifier declarator compound_statement | basic_type_name declarator compound_statement | TYPEDEFname declarator compound_statement | global_or_scoped_typedefname declarator compound_statement | declaration_qualifier_list identifier_declarator compound_statement | type_qualifier_list identifier_declarator compound_statement
102: constructor_function_in_class	-> declaration_specifier constructor_parameter_list_and_body | TYPEDEFname constructor_parameter_list_and_body
103: member_pure_opt	-> /* Empty */ | '=' OCTALconstant
104: bit_field_identifier_declarator	-> ':' constant_expression | identifier_declarator {/* Empty */} ':' constant_expression
105: member_conflict_declaring_item	-> TYPEDEFname identifier_declarator member_pure_opt | TYPEDEFname parameter_typedef_declarator member_pure_opt | TYPEDEFname simple_paren_typedef_declarator member_pure_opt | declaration_specifier identifier_declarator member_pure_opt | declaration_specifier parameter_typedef_declarator member_pure_opt | declaration_specifier simple_paren_typedef_declarator member_pure_opt | member_conflict_paren_declaring_item
106: bit_field_declarator	-> bit_field_identifier_declarator | TYPEDEFname {/* Empty */} ':' constant_expression
107: parameter_typedef_declarator	-> TYPEDEFname | TYPEDEFname postfixing_abstract_declarator | clean_typedef_declarator
108: member_conflict_paren_declaring_item	-> TYPEDEFname asterisk_or_ampersand '(' simple_paren_typedef_declarator ')' member_pure_opt | TYPEDEFname unary_modifier '(' simple_paren_typedef_declarator ')' member_pure_opt | TYPEDEFname asterisk_or_ampersand '(' TYPEDEFname ')' member_pure_opt | TYPEDEFname unary_modifier '(' TYPEDEFname ')' member_pure_opt | TYPEDEFname asterisk_or_ampersand paren_typedef_declarator member_pure_opt | TYPEDEFname unary_modifier paren_typedef_declarator member_pure_opt | declaration_specifier asterisk_or_ampersand '(' simple_paren_typedef_declarator ')' member_pure_opt | declaration_specifier unary_modifier '(' simple_paren_typedef_declarator ')' member_pure_opt | declaration_specifier asterisk_or_ampersand '(' TYPEDEFname ')' member_pure_opt | declaration_specifier unary_modifier '(' TYPEDEFname ')' member_pure_opt | declaration_specifier asterisk_or_ampersand paren_typedef_declarator member_pure_opt | declaration_specifier unary_modifier paren_typedef_declarator member_pure_opt | member_conflict_paren_postfix_declaring_item
109: member_conflict_paren_postfix_declaring_item	-> TYPEDEFname '(' paren_typedef_declarator ')' member_pure_opt | TYPEDEFname '(' simple_paren_typedef_declarator postfixing_abstract_declarator ')' member_pure_opt | TYPEDEFname '(' TYPEDEFname postfixing_abstract_declarator ')' member_pure_opt | TYPEDEFname '(' paren_typedef_declarator ')' postfixing_abstract_declarator member_pure_opt | declaration_specifier '(' paren_typedef_declarator ')' member_pure_opt | declaration_specifier '(' simple_paren_typedef_declarator postfixing_abstract_declarator ')' member_pure_opt | declaration_specifier '(' TYPEDEFname postfixing_abstract_declarator ')' member_pure_opt | declaration_specifier '(' paren_typedef_declarator ')' postfixing_abstract_declarator member_pure_opt
110: global_opt_scope_opt_enum_key	-> ENUM | global_or_scope ENUM
111: enumerator_list	-> enumerator_list_no_trailing_comma | enumerator_list_no_trailing_comma ','
112: enumerator_list_no_trailing_comma	-> enumerator_name enumerator_value_opt | enumerator_list_no_trailing_comma ',' enumerator_name enumerator_value_opt
113: enumerator_name	-> IDENTIFIER | TYPEDEFname
114: enumerator_value_opt	-> /* Empty */ | '=' constant_expression
115: parameter_type_list	-> '(' ')' type_qualifier_list_opt | '(' type_name ')' type_qualifier_list_opt | '(' type_name initializer ')' type_qualifier_list_opt | '(' named_parameter_type_list ')' type_qualifier_list_opt
116: initializer	-> '=' initializer_group
117: named_parameter_type_list	-> parameter_list | parameter_list comma_opt_ellipsis | type_name comma_opt_ellipsis | type_name initializer comma_opt_ellipsis | ELLIPSIS
118: old_parameter_type_list	-> '(' ')' | '(' type_name ')' | '(' type_name initializer ')' | '(' named_parameter_type_list ')'
119: parameter_list	-> non_casting_parameter_declaration | non_casting_parameter_declaration initializer | type_name ',' parameter_declaration | type_name initializer ',' parameter_declaration | parameter_list ',' parameter_declaration
120: comma_opt_ellipsis	-> ELLIPSIS | ',' ELLIPSIS
121: non_casting_parameter_declaration	-> declaration_specifier | declaration_specifier abstract_declarator | declaration_specifier identifier_declarator | declaration_specifier parameter_typedef_declarator | declaration_qualifier_list | declaration_qualifier_list abstract_declarator | declaration_qualifier_list identifier_declarator | type_specifier identifier_declarator | type_specifier parameter_typedef_declarator | basic_type_name identifier_declarator | basic_type_name parameter_typedef_declarator | TYPEDEFname identifier_declarator | TYPEDEFname parameter_typedef_declarator | global_or_scoped_typedefname identifier_declarator | global_or_scoped_typedefname parameter_typedef_declarator | type_qualifier_list identifier_declarator
122: parameter_declaration	-> type_name | type_name initializer | non_casting_parameter_declaration | non_casting_parameter_declaration initializer
123: abstract_declarator	-> unary_abstract_declarator | postfix_abstract_declarator | postfixing_abstract_declarator
124: initializer_group	-> '{' initializer_list '}' | '{' initializer_list ',' '}' | assignment_expression
125: initializer_list	-> initializer_group | initializer_list ',' initializer_group
126: statement	-> labeled_statement | compound_statement | expression_statement | selection_statement | iteration_statement | jump_statement | declaration
127: labeled_statement	-> label ':' statement | CASE constant_expression ':' statement | DEFAULT ':' statement
128: compound_statement	-> '{' statement_list_opt '}'
129: expression_statement	-> comma_expression_opt ';'
130: selection_statement	-> IF '(' comma_expression ')' statement | IF '(' comma_expression ')' statement ELSE statement | SWITCH '(' comma_expression ')' statement
131: iteration_statement	-> WHILE '(' comma_expression_opt ')' statement | DO statement WHILE '(' comma_expression ')' ';' | FOR '(' comma_expression_opt ';' comma_expression_opt ';' comma_expression_opt ')' statement | FOR '(' declaration comma_expression_opt ';' comma_expression_opt ')' statement
132: jump_statement	-> GOTO label ';' | CONTINUE ';' | BREAK ';' | RETURN comma_expression_opt ';'
133: label	-> IDENTIFIER | TYPEDEFname
134: statement_list_opt	-> /* Empty */ | statement_list_opt statement
135: declaration_list	-> declaration | declaration_list declaration
136: external_definition	-> function_declaration | function_definition | declaration | linkage_specifier function_declaration | linkage_specifier function_definition | linkage_specifier declaration | linkage_specifier '{' translation_unit '}'
137: function_declaration	-> identifier_declarator ';' | constructor_function_declaration ';'
138: function_definition	-> new_function_definition | old_function_definition | constructor_function_definition
139: linkage_specifier	-> EXTERN STRINGliteral
140: constructor_function_declaration	-> global_or_scoped_typedefname parameter_type_list | declaration_specifier parameter_type_list
141: old_function_definition	-> old_function_declarator {/* Empty */} old_function_body | declaration_specifier old_function_declarator {/* Empty */} old_function_body | type_specifier old_function_declarator {/* Empty */} old_function_body | basic_type_name old_function_declarator {/* Empty */} old_function_body | TYPEDEFname old_function_declarator {/* Empty */} old_function_body | global_or_scoped_typedefname old_function_declarator {/* Empty */} old_function_body | declaration_qualifier_list old_function_declarator {/* Empty */} old_function_body | type_qualifier_list old_function_declarator {/* Empty */} old_function_body
142: constructor_function_definition	-> global_or_scoped_typedefname parameter_type_list constructor_init_list_opt compound_statement | declaration_specifier parameter_type_list constructor_init_list_opt compound_statement
143: old_function_declarator	-> postfix_old_function_declarator | asterisk_or_ampersand old_function_declarator | unary_modifier old_function_declarator
144: old_function_body	-> declaration_list compound_statement | compound_statement
145: constructor_init_list_opt	-> /* Empty */ | constructor_init_list
146: constructor_parameter_list_and_body	-> '(' ')' type_qualifier_list_opt ';' | '(' type_name initializer ')' type_qualifier_list_opt ';' | '(' named_parameter_type_list ')' type_qualifier_list_opt ';' | '(' ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' type_name initializer ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' named_parameter_type_list ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | constructor_conflicting_parameter_list_and_body
147: constructor_conflicting_parameter_list_and_body	-> '(' type_specifier ')' type_qualifier_list_opt ';' | '(' basic_type_name ')' type_qualifier_list_opt ';' | '(' TYPEDEFname ')' type_qualifier_list_opt ';' | '(' global_or_scoped_typedefname ')' type_qualifier_list_opt ';' | '(' type_qualifier_list ')' type_qualifier_list_opt ';' | '(' type_specifier abstract_declarator ')' type_qualifier_list_opt ';' | '(' basic_type_name abstract_declarator ')' type_qualifier_list_opt ';' | '(' global_or_scoped_typedefname abstract_declarator ')' type_qualifier_list_opt ';' | '(' type_qualifier_list abstract_declarator ')' type_qualifier_list_opt ';' | '(' type_specifier ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' basic_type_name ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' TYPEDEFname ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' global_or_scoped_typedefname ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' type_qualifier_list ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' type_specifier abstract_declarator ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' basic_type_name abstract_declarator ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' global_or_scoped_typedefname abstract_declarator ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' type_qualifier_list abstract_declarator ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | constructor_conflicting_typedef_declarator
148: constructor_conflicting_typedef_declarator	-> '(' TYPEDEFname unary_abstract_declarator ')' type_qualifier_list_opt ';' | '(' TYPEDEFname unary_abstract_declarator ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' TYPEDEFname postfix_abstract_declarator ')' type_qualifier_list_opt ';' | '(' TYPEDEFname postfix_abstract_declarator ')' type_qualifier_list_opt constructor_init_list_opt compound_statement | '(' TYPEDEFname postfixing_abstract_declarator ')' type_qualifier_list_opt ';' | '(' TYPEDEFname postfixing_abstract_declarator ')' type_qualifier_list_opt constructor_init_list_opt compound_statement
149: unary_abstract_declarator	-> asterisk_or_ampersand | unary_modifier | asterisk_or_ampersand abstract_declarator | unary_modifier abstract_declarator
150: postfix_abstract_declarator	-> '(' unary_abstract_declarator ')' | '(' postfix_abstract_declarator ')' | '(' postfixing_abstract_declarator ')' | '(' unary_abstract_declarator ')' postfixing_abstract_declarator
151: constructor_init_list	-> ':' constructor_init | constructor_init_list ',' constructor_init
152: constructor_init	-> IDENTIFIER '(' argument_expression_list ')' | IDENTIFIER '(' ')' | TYPEDEFname '(' argument_expression_list ')' | TYPEDEFname '(' ')' | global_or_scoped_typedefname '(' argument_expression_list ')' | global_or_scoped_typedefname '(' ')' | '(' argument_expression_list ')' | '(' ')'
153: typedef_declarator	-> paren_typedef_declarator | simple_paren_typedef_declarator | parameter_typedef_declarator
154: clean_postfix_typedef_declarator	-> '(' clean_typedef_declarator ')' | '(' clean_typedef_declarator ')' postfixing_abstract_declarator
155: postfix_paren_typedef_declarator	-> '(' paren_typedef_declarator ')' | '(' simple_paren_typedef_declarator postfixing_abstract_declarator ')' | '(' TYPEDEFname postfixing_abstract_declarator ')' | '(' paren_typedef_declarator ')' postfixing_abstract_declarator
156: postfix_identifier_declarator	-> paren_identifier_declarator postfixing_abstract_declarator | '(' unary_identifier_declarator ')' | '(' unary_identifier_declarator ')' postfixing_abstract_declarator
157: postfix_old_function_declarator	-> paren_identifier_declarator '(' argument_expression_list ')' | '(' old_function_declarator ')' | '(' old_function_declarator ')' old_postfixing_abstract_declarator
158: old_postfixing_abstract_declarator	-> array_abstract_declarator | old_parameter_type_list
159: array_abstract_declarator	-> '[' ']' | '[' constant_expression ']' | array_abstract_declarator '[' constant_expression ']'
160: scoping_name	-> tag_name | aggregate_key tag_name
161: complex_name	-> '~' TYPEDEFname | operator_function_name
162: scoped_typedefname	-> scope TYPEDEFname
>>> There are 101 terminals and 163 non-terminals 
>>> Total McCabe complexity is: 665
McCabe Metrics:
   2   5   2   3   2   2   6   2   2   2   6   3   5   5   9   3   3  32   2   3
   2   2  11   2  15   2   5   2   3  11   2  10   4   2   3   2   3   4   3   4
   2   3   4   3   3   5   3   2   2   2   2   2   2   1   2   6  18   9   5   3
   2   2   3   3   2   4   7   4   4   2   2   4   7   3   3   5   6   9   2   2
   2   2   2   2   4   1   2   2   3   2   2   2   2   3   2   2   3   2  10  11
   6   8   2   2   3   7   3   3  13   8   2   2   2   2   2   4   1   5   4   5
   2  16   4   3   3   2   7   3   1   1   3   4   4   2   2   2   7   2   3   1
   2  16   2   3   2   2   7  19   6   4   4   2   8   3   2   4   3   3   2   3
   2   2   1
>>> Total Halstead volume is: 490867
>>> Average RHS Size is: 9.3865
GRAMMATICAL LEVELS:
DERIVES-IN-ONE RELATION
  0: *                                                                                                                                       *                          
  1:                                                                                                                                                                    
  2:   *                                                                                                                                                                
  3:    ***                                                                                                                                                             
  4:                                                                                            *                                                                       
  5:                                                                                            *                                                                     * 
  6:  **    ***                                                                                                                                                         
  7:     *                                                                                     *                                                                        
  8:      *                                                                                    *                                                                        
  9:          *                 *                                                                                                                                       
 10:            *****                                                                                                                                                   
 11:            *      *                                                            **                                                                                  
 12:             * *   *                                                            *                                                                                   
 13:              * *  *                                                            *                                                                                   
 14:                                                                                                                                                                    
 15:                                                                                           *                                                                       *
 16:           *      ***                                                                                                                                               
 17:                       *                                                                                                                                            
 18:                   *                                                            *                                                                                   
 19:                    ***                                                                                                                                             
 20:                   *  * *                                                                   *                                                                       
 21:                                                                                                                                                                    
 22:                                                                                                                                                                    
 23:                   *                                                                                                                                                
 24:       *  *    **        ****                                                                                                                                       
 25:                          * *                                                                                                                                       
 26:     **        *   *         *                                                                                                                                      
 27:                       *    * *                      *                                                                                                              
 28:                   *         *                                                **                                                                                    
 29:                      *  *    ****                                                                                                                                  
 30:                              ***                                                                                                                                   
 31:               **  *                                              *                                                         *                                       
 32:                          *     * ***                                                                                                                               
 33:                                     *                                                                                                                              
 34:                          *                                                                                                                                         
 35:           *       *               *  *                                                                                                                             
 36:                                                                                           **                                                                       
 37:                     **               **                                                                                                                            
 38:          *                            *                                                                                                                            
 39:          *                    *        **                                                                                                                          
 40:                                     *                                                                                                                              
 41:                                        * *                                                                                                                         
 42:                                          **                                                                                                                        
 43:                                           **                                                                                                                       
 44:                                            **                                                                                                                      
 45:                                             **                                                                                                                     
 46:                                              **                                                                                                                    
 47:                                               **                                                                                                                   
 48:                                                **                                                                                                                  
 49:                                                 **                                                                                                                 
 50:                                                  **                                                                                                                
 51:                                                   **                                                                                                               
 52:          *                                         **                                                                                                              
 53:                                                     *                                                                                                              
 54:          *                                                                                                                                                         
 55:            *                                            ****                                                                                                       
 56:               **                                        *    * ****                                                                                                
 57:                   *         *                            *  ***                                                                                                    
 58:            *                *                             **                 ** **                                                                                 
 59:                   *                                        *                   * *                                                                                 
 60:    *                                                                      *                                                                                        
 61:                                                                                                                     *                                              
 62:                     **                                        *    *                                                                                               
 63:                                                           *                **                                                                                      
 64:                                                             *                                                                                            *         
 65:            ***                                             *                                                                                                       
 66:                     **   *                                        ******                                                                                           
 67:    *                     *                                            *   *                                                                                        
 68:                          *                                           ** *                                                                                          
 69:                                                                      *                                                                                             
 70:                                                                                                                    *                                           *   
 71:                          *                                            *  *                                                                                         
 72:                     **                                               *  *                                                                                  *       
 73:                     **                                                                                     *                                              *        
 74:                     **                                      *                                                                                               *      
 75:             * *             *                                              * **                                                                                    
 76:              * *            *                                               ***                                                                                    
 77:                                                                                                                                                                    
 78:                                                                              * *                                                                                   
 79:                                                                                                                                                                    
 80:                                                                                     **                                                                             
 81:                                                                                   **                                                                               
 82:                                                                                     * ***                                                                          
 83:                                                                                      *                        **                                                   
 84:                                                                                         ****                                                                       
 85:                                                                                          *                    *                                                    
 86:                                                                                             *                                                                      
 87:                                                                                        *          *                                                                
 88:                                                                                                                                                                    
 89:                                                                                                                                                                    
 90:                                                                                                                                                                    
 91:                                                                                            *                                                                    *  
 92:                                                                                             **                                                                     
 93:                                                                                               ****                                                                 
 94:                *                                                                                                                                                   
 95:                                                                                                 *                                                                  
 96:                                                                                                                                                                    
 97:                                                                                                                                                                    
 98:            *                                              ***               *                   *  ****                                                            
 99:               **                                               ***                                 *   * **                                                        
100:                   *         *                               *                                       *  **                                                          
101:               **  *         *                               *  ***                                                              *                                  
102:                                                                *                                                                                  *                
103:                                                                                                                                                                    
104:                                                      *      *                                                                                                      
105:                                                             *  *     *                                 *   **                                                      
106:                                                      *                                                  *                                                          
107:                                                                       *  *                                                                                         
108:                     **                                         *     *  *                              *     *                                                     
109:                                                                *     ** *                              *                                                           
110:                                     *                                                                                                                              
111:                                                                                                                 *                                                  
112:                                                                                                                 ***                                                
113:                                                                                                                                                                    
114:                                                      *                                                                                                             
115:                        *       *                                                                                    **                                             
116:                                                                                                                             *                                      
117:                                *                                                                                    *  **                                          
118:                                *                                                                                    **                                             
119:                                *                                                                                    *  * **                                        
120:                                                                                                                                                                    
121:               **  *         *                               *  * *                                         *               *                                       
122:                                *                                                                                    *    *                                         
123:                                                                       *                                                                              **            
124:                            *                                                                                                 *                                     
125:                                                                                                                             **                                     
126:                                                        *                                                                       ******                              
127:                                                      *                                                                        *      *                             
128:                                                                                                                                       *                            
129:                                                       *                                                                                                            
130:          *                                                                                                                    *                                    
131:          *                                            **                                                                      *                                    
132:                                                       *                                                                              *                             
133:                                                                                                                                                                    
134:                                                                                                                               *       *                            
135:                                                        *                                                                               *                           
136: *                                                      *                                                                                 ***                       
137:                                                             *                                                                               *                      
138:                                                                                                      *                                       **                    
139:                                                                                                                                                                    
140:                *                                               *                                                   *                                               
141:               **  *         *                                  * *                                                                             **                  
142:                *                                               *                                                   *            *                *                 
143:                     **                                                                                                                         *             *     
144:                                                                                                                                 *      *                           
145:                                                                                                                                                        *           
146:                        *       *                                                                                    **          *                * *               
147:               **  *    *                                         *                                                         *    *                *  *              
148:                        *                                              *                                                         *                *   **            
149:                     **                                                                                                     *                                       
150:                                                                       *                                                                              **            
151:                                                                                                                                                        **          
152:                *         *                                                                                                                                         
153:                                                                      *  *                                  *                                                       
154:                                                                       *  *                                                                                         
155:                                                                      ** *                                                                                          
156:    *                                                                  *   *                                                                                        
157:    *                     *                                                                                                                     *              *    
158:                                                                                                                       *                                        *   
159:                                                      *                                                                                                         *   
160:                                                                                         **                                                                         
161:                 *                                                                                                                                                  
162:                                                                                            *                                                                       
DERIVES-IN-MANY RELATION
  0: *******************************************************************************************************************************************************************
  1:                                                                                                                                                                    
  2:   *                                                                                                                                                                
  3:    ***    **************            *                                          **   **  ****                  *                                                 ***
  4:                                                                                         ** *                                                                    *  
  5:           **************            *                                          **   **  ****                  *                                                 ***
  6:  ********************************************************************************************************************* ****************          ************  ****
  7:     *                                                                                   ****                                                                    *  
  8:      *    **************            *                                          **   **  ****                  *                                                 ***
  9:  ********************************************************************************************************************* ****************          ************  ****
 10:            *****  *                 *                                          **   **  ****                  *                                                 * *
 11:            *      *                 *                                          **   **  ****                  *                                                 *  
 12:             * *   *                                                            *                                                                                   
 13:              * *  *                                                            *        ****                                                                    * *
 14:                                                                                                                                                                    
 15:                                                                                         ****                                                                    * *
 16:           ****** *******            *                                          **   **  ****                  *                                                 * *
 17:                       *                                                                                                                                            
 18:                   *                                                            *                                                                                   
 19:                   **** *                                                       *        ** *                                                                    *  
 20:                   *  * *                                                       *        ** *                                                                    *  
 21:                                                                                                                                                                    
 22:                                                                                                                                                                    
 23:                   *                                                            *                                                                                   
 24:  ********************************************************************************************************************* ****************          ************  ****
 25:  ********************************************************************************************************************* ****************          ************  ****
 26:     **    **************    *       *                                        ****   **  ****                  *                                                 ***
 27:  ********************************************************************************************************************* ****************          ************  ****
 28:                   *         *                                                ***                                                                                   
 29:  ********************************************************************************************************************* ****************          ************  ****
 30:  ********************************************************************************************************************* ****************          ************  ****
 31:  ********************************************************************************************************************* ****************          ************  ****
 32:  ********************************************************************************************************************* ****************          ************  ****
 33:                                     *                                                   ****                                                                    *  
 34:  ********************************************************************************************************************* ****************          ************  ****
 35:  ********************************************************************************************************************* ****************          ************  ****
 36:                                                                                         ****                                                                    *  
 37:  ********************************************************************************************************************* ****************          ************  ****
 38:  ********************************************************************************************************************* ****************          ************  ****
 39:  ********************************************************************************************************************* ****************          ************  ****
 40:                                     *                                                   ****                                                                    *  
 41:  ********************************************************************************************************************* ****************          ************  ****
 42:  ********************************************************************************************************************* ****************          ************  ****
 43:  ********************************************************************************************************************* ****************          ************  ****
 44:  ********************************************************************************************************************* ****************          ************  ****
 45:  ********************************************************************************************************************* ****************          ************  ****
 46:  ********************************************************************************************************************* ****************          ************  ****
 47:  ********************************************************************************************************************* ****************          ************  ****
 48:  ********************************************************************************************************************* ****************          ************  ****
 49:  ********************************************************************************************************************* ****************          ************  ****
 50:  ********************************************************************************************************************* ****************          ************  ****
 51:  ********************************************************************************************************************* ****************          ************  ****
 52:  ********************************************************************************************************************* ****************          ************  ****
 53:  ********************************************************************************************************************* ****************          ************  ****
 54:  ********************************************************************************************************************* ****************          ************  ****
 55:  ********************************************************************************************************************* ****************          ************  ****
 56:  ********************************************************************************************************************* ****************          ************  ****
 57:  ********************************************************************************************************************* ****************          ************  ****
 58:  ********************************************************************************************************************* ****************          ************  ****
 59:  ********************************************************************************************************************* ****************          ************  ****
 60:  ********************************************************************************************************************* ****************          ************  ****
 61:  ********************************************************************************************************************* ****************          ************  ****
 62:  ********************************************************************************************************************* ****************          ************  ****
 63:  ********************************************************************************************************************* ****************          ************  ****
 64:  ********************************************************************************************************************* ****************          ************  ****
 65:  ********************************************************************************************************************* ****************          ************  ****
 66:  ********************************************************************************************************************* ****************          ************  ****
 67:  ********************************************************************************************************************* ****************          ************  ****
 68:  ********************************************************************************************************************* ****************          ************  ****
 69:                                                                      *                                                                                             
 70:  ********************************************************************************************************************* ****************          ************  ****
 71:  ********************************************************************************************************************* ****************          ************  ****
 72:  ********************************************************************************************************************* ****************          ************  ****
 73:  ********************************************************************************************************************* ****************          ************  ****
 74:  ********************************************************************************************************************* ****************          ************  ****
 75:             * *   *         *                                              * ***                                                                                   
 76:              * *  *         *                                               ****        ****                                                                    * *
 77:                                                                                                                                                                    
 78:                                                                              * *                                                                                   
 79:                                                                                                                                                                    
 80:                                     *                                               **  ****                  *                                                 *  
 81:  ********************************************************************************************************************* ****************          ************  ****
 82:  ********************************************************************************************************************* ****************          ************  ****
 83:  ********************************************************************************************************************* ****************          ************  ****
 84:                                                                                         ****                                                                    *  
 85:                                     *                                                   ****                  *                                                 *  
 86:                *                                                                        **********                                                              * *
 87:  ********************************************************************************************************************* ****************          ************  ****
 88:                                                                                                                                                                    
 89:                                                                                                                                                                    
 90:                                                                                                                                                                    
 91:                                                                                         ** *                                                                    *  
 92:                *                                                                        **********                                                              * *
 93:                *                                                                        ****  ****                                                              * *
 94:                *                                                                        ****                                                                    * *
 95:                                                                                                 *                                                                  
 96:                                                                                                                                                                    
 97:                                                                                                                                                                    
 98:  ********************************************************************************************************************* ****************          ************  ****
 99:  ********************************************************************************************************************* ****************          ************  ****
100:  ********************************************************************************************************************* ****************          ************  ****
101:  ********************************************************************************************************************* ****************          ************  ****
102:  ********************************************************************************************************************* ****************          ************  ****
103:                                                                                                                                                                    
104:  ********************************************************************************************************************* ****************          ************  ****
105:  ********************************************************************************************************************* ****************          ************  ****
106:  ********************************************************************************************************************* ****************          ************  ****
107:  ********************************************************************************************************************* ****************          ************  ****
108:  ********************************************************************************************************************* ****************          ************  ****
109:  ********************************************************************************************************************* ****************          ************  ****
110:                                     *                                                   ****                                                                    *  
111:  ********************************************************************************************************************* ****************          ************  ****
112:  ********************************************************************************************************************* ****************          ************  ****
113:                                                                                                                                                                    
114:  ********************************************************************************************************************* ****************          ************  ****
115:  ********************************************************************************************************************* ****************          ************  ****
116:  ********************************************************************************************************************* ****************          ************  ****
117:  ********************************************************************************************************************* ****************          ************  ****
118:  ********************************************************************************************************************* ****************          ************  ****
119:  ********************************************************************************************************************* ****************          ************  ****
120:                                                                                                                                                                    
121:  ********************************************************************************************************************* ****************          ************  ****
122:  ********************************************************************************************************************* ****************          ************  ****
123:  ********************************************************************************************************************* ****************          ************  ****
124:  ********************************************************************************************************************* ****************          ************  ****
125:  ********************************************************************************************************************* ****************          ************  ****
126:  ********************************************************************************************************************* ****************          ************  ****
127:  ********************************************************************************************************************* ****************          ************  ****
128:  ********************************************************************************************************************* ****************          ************  ****
129:  ********************************************************************************************************************* ****************          ************  ****
130:  ********************************************************************************************************************* ****************          ************  ****
131:  ********************************************************************************************************************* ****************          ************  ****
132:  ********************************************************************************************************************* ****************          ************  ****
133:                                                                                                                                                                    
134:  ********************************************************************************************************************* ****************          ************  ****
135:  ********************************************************************************************************************* *****************         ************  ****
136: *******************************************************************************************************************************************************************
137:  ********************************************************************************************************************* ****************     *    ************  ****
138:  ***************************************************************************************************************************************     **********************
139:                                                                                                                                                                    
140:  ********************************************************************************************************************* ****************          ************  ****
141:  ***************************************************************************************************************************************       ********************
142:  ********************************************************************************************************************* ****************          ************  ****
143:  **************************************************************************************************************************************        * ******************
144:  ********************************************************************************************************************* *****************         ************  ****
145:  ********************************************************************************************************************* ****************          ************  ****
146:  ********************************************************************************************************************* ****************          ************  ****
147:  ********************************************************************************************************************* ****************          ************  ****
148:  ********************************************************************************************************************* ****************          ************  ****
149:  ********************************************************************************************************************* ****************          ************  ****
150:  ********************************************************************************************************************* ****************          ************  ****
151:  ********************************************************************************************************************* ****************          ************  ****
152:  ********************************************************************************************************************* ****************          ************  ****
153:  ********************************************************************************************************************* ****************          ************  ****
154:  ********************************************************************************************************************* ****************          ************  ****
155:  ********************************************************************************************************************* ****************          ************  ****
156:  ********************************************************************************************************************* ****************          ************  ****
157:  **************************************************************************************************************************************        * ******************
158:  **************************************************************************************************************************************          ************  ****
159:  ********************************************************************************************************************* ****************          ************  ****
160:                                                                                         **                                                                         
161:           **************            *                                          **   **  ****                  *                                                 * *
162:                                                                                         ** *                                                                    *  
Fenton impurity is: 1.01113
>>> Fenton closed impurity is: 61.9303
Class #0: (size = 2) 
	translation_unit	external_definition
Class #6: (size = 95) 
	primary_expression	comma_expression	postfix_expression	argument_expression_list	assignment_expression	unary_expression	cast_expression
	type_name	allocation_expression	operator_new_initializer_opt	operator_new_type	operator_new_declarator_opt	operator_new_array_declarator	deallocation_expression
	point_member_expression	multiplicative_expression	additive_expression	shift_expression	relational_expression	equality_expression	AND_expression
	exclusive_OR_expression	inclusive_OR_expression	logical_AND_expression	logical_OR_expression	conditional_expression	constant_expression	comma_expression_opt
	declaration	declaring_list	default_declaring_list	sue_declaration_specifier	sue_type_specifier_elaboration	identifier_declarator	initializer_opt
	constructed_identifier_declarator	declaration_specifier	declarator	type_specifier	constructed_declarator	nonunary_constructed_identifier_declarator	constructed_paren_typedef_declarator
	postfixing_abstract_declarator	constructed_parameter_typedef_declarator	paren_typedef_declarator	clean_typedef_declarator	unary_identifier_declarator	elaborated_type_name_elaboration	aggregate_name_elaboration
	enum_name_elaboration	member_declaration_list_opt	member_declaration	member_declaring_list	member_default_declaring_list	new_function_definition	constructor_function_in_class
	bit_field_identifier_declarator	member_conflict_declaring_item	bit_field_declarator	parameter_typedef_declarator	member_conflict_paren_declaring_item	member_conflict_paren_postfix_declaring_item	enumerator_list
	enumerator_list_no_trailing_comma	enumerator_value_opt	parameter_type_list	initializer	named_parameter_type_list	parameter_list	non_casting_parameter_declaration
	parameter_declaration	abstract_declarator	initializer_group	initializer_list	statement	labeled_statement	compound_statement
	expression_statement	selection_statement	iteration_statement	jump_statement	statement_list_opt	constructor_init_list_opt	constructor_parameter_list_and_body
	constructor_conflicting_parameter_list_and_body	constructor_conflicting_typedef_declarator	unary_abstract_declarator	postfix_abstract_declarator	constructor_init_list	constructor_init	typedef_declarator
	clean_postfix_typedef_declarator	postfix_paren_typedef_declarator	postfix_identifier_declarator	array_abstract_declarator
Class #61: (size = 2) 
	old_function_declarator	postfix_old_function_declarator
>>> There are 67 equivalence classes, 3 of which are non-singleton
As a percentage of the number of non-terminals, there are 41.1% equivalence classes 
>>> (Depth) Largest equivalence class has 95 non-terminals
Varju height metric is: 29.9
EQUIVALENCE GRAPH (size 67)
0:  ******************************************************************
1:                                                                    
2:                                                                    
3:     **   **************   *      **** ****       *              ***
4:                                       ** *                      *  
5:          **************   *      **** ****       *              ***
6:  ***** ******************************************** **          ***
7:     *                                 ****                      *  
8:      *   **************   *      **** ****       *              ***
9:           *****  *        *      **** ****       *              * *
10:                  *        *      **** ****       *              *  
11:              *   *               *                                 
12:               *  *               *    ****                      * *
13:                                                                    
14:                                       ****                      * *
15:          ****** *******   *      **** ****       *              * *
16:                      *                                             
17:                                  *                                 
18:                  * ** *          *    ** *                      *  
19:                  *  * *          *    ** *                      *  
20:                                                                    
21:                                                                    
22:                  *               *                                 
23:     **   ************** * *    ****** ****       *              ***
24:                  *             ***                                 
25:                           *           ****                      *  
26:                                       ****                      *  
27:                           *           ****                      *  
28:                                                                    
29:            * *   *      *      ***                                 
30:             * *  *      *      ***    ****                      * *
31:                                                                    
32:                                * *                                 
33:                                                                    
34:                           *        ** ****       *              *  
35:                                       ****                      *  
36:                           *           ****       *              *  
37:               *                       **********                * *
38:                                                                    
39:                                                                    
40:                                                                    
41:                                       **                        *  
42:               *                       **** *****                * *
43:               *                       ****  ****                * *
44:               *                       ****                      * *
45:                                               *                    
46:                                                                    
47:                                                                    
48:                                                                    
49:                           *           ****                      *  
50:                                                                    
51:  ************************************************** **          ***
52:                                                                    
53:                                                                    
54:  ************************************************** **          ***
55:  ************************************************** **    *     ***
56:  ******************************************************    ********
57:                                                                    
58:  ************************************************** **          ***
59:  ******************************************************      ******
60:  ************************************************** **          ***
61:  *****************************************************         ****
62:  ************************************************** ***         ***
63:  *****************************************************          ***
64:                                       **                           
65:          **************   *      **** ****       *              * *
66:                                       ** *                      *  
